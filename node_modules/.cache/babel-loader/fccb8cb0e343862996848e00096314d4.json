{"ast":null,"code":"var _jsxFileName = \"/Users/jamespark/Documents/Github/v3_portfolio/src/Components/ProjectPage/ProjectPage.js\";\nimport React from \"react\";\nimport Markdown from \"markdown-to-jsx\";\nimport testMd from \"../../Projects/test.md\";\nimport Meditap from \"../../Projects/Meditap.md\";\nimport \"./ProjectPage.scss\";\n\nclass ProjectPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderPage = page => {\n      return page.map(item => {\n        switch (item.type) {\n          case \"title\":\n            return React.createElement(\"div\", {\n              className: \"title-container\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 28\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"subheader1\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 29\n              },\n              __self: this\n            }, item.text));\n\n          case \"duration\":\n            return React.createElement(\"div\", {\n              className: \"margin-container\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"basetext2 bold\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35\n              },\n              __self: this\n            }, item.text));\n\n          case \"technology\":\n            return React.createElement(\"div\", {\n              className: \"margin-container\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"basetext2 medium\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41\n              },\n              __self: this\n            }, item.text));\n\n          case \"list\":\n            return React.createElement(\"div\", {\n              className: \"paragraph-container left\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46\n              },\n              __self: this\n            }, item.list.map(item => React.createElement(\"div\", {\n              className: \"basetext2 medium\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 48\n              },\n              __self: this\n            }, item)));\n\n          case \"subheader\":\n            return React.createElement(\"div\", {\n              className: \"margin-container left\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"subheader2\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55\n              },\n              __self: this\n            }, item.text));\n\n          case \"paragraph\":\n            return React.createElement(\"div\", {\n              className: \"paragraph-container\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"basetext2 medium\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61\n              },\n              __self: this\n            }, item.text));\n\n          case \"image\":\n            return React.createElement(\"img\", {\n              src: item.address,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65\n              },\n              __self: this\n            });\n        }\n      });\n    };\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentWillMount() {\n    fetch(Meditap).then(response => response.text()).then(text => {\n      this.setState({\n        content: text\n      });\n    });\n  }\n\n  render() {\n    const page = this.props.page; // return <div className=\"ProjectPage\">{this.renderPage(page)}</div>;\n\n    return React.createElement(Markdown, {\n      options: {\n        overrides: {\n          DatePicker: {\n            component: DatePicker\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.content);\n  }\n\n}\n\nexport default ProjectPage;","map":{"version":3,"sources":["/Users/jamespark/Documents/Github/v3_portfolio/src/Components/ProjectPage/ProjectPage.js"],"names":["React","Markdown","testMd","Meditap","ProjectPage","Component","constructor","props","renderPage","page","map","item","type","text","list","address","state","content","componentWillMount","fetch","then","response","setState","render","overrides","DatePicker","component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Markdown from \"markdown-to-jsx\";\n\nimport testMd from \"../../Projects/test.md\";\nimport Meditap from \"../../Projects/Meditap.md\";\n\nimport \"./ProjectPage.scss\";\n\nclass ProjectPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { content: \"\" };\n  }\n  componentWillMount() {\n    fetch(Meditap)\n      .then(response => response.text())\n      .then(text => {\n        this.setState({ content: text });\n      });\n  }\n\n  renderPage = page => {\n    return page.map(item => {\n      switch (item.type) {\n        case \"title\":\n          return (\n            <div className=\"title-container\">\n              <div className=\"subheader1\">{item.text}</div>\n            </div>\n          );\n        case \"duration\":\n          return (\n            <div className=\"margin-container\">\n              <div className=\"basetext2 bold\">{item.text}</div>\n            </div>\n          );\n        case \"technology\":\n          return (\n            <div className=\"margin-container\">\n              <div className=\"basetext2 medium\">{item.text}</div>\n            </div>\n          );\n        case \"list\":\n          return (\n            <div className=\"paragraph-container left\">\n              {item.list.map(item => (\n                <div className=\"basetext2 medium\">{item}</div>\n              ))}\n            </div>\n          );\n        case \"subheader\":\n          return (\n            <div className=\"margin-container left\">\n              <div className=\"subheader2\">{item.text}</div>\n            </div>\n          );\n        case \"paragraph\":\n          return (\n            <div className=\"paragraph-container\">\n              <div className=\"basetext2 medium\">{item.text}</div>\n            </div>\n          );\n        case \"image\":\n          return <img src={item.address} />;\n      }\n    });\n  };\n  render() {\n    const { page } = this.props;\n    // return <div className=\"ProjectPage\">{this.renderPage(page)}</div>;\n    return (\n      <Markdown\n        options={{\n          overrides: {\n            DatePicker: {\n              component: DatePicker\n            }\n          }\n        }}\n      >\n        {this.state.content}\n      </Markdown>\n    );\n  }\n}\n\nexport default ProjectPage;\n"]},"metadata":{},"sourceType":"module"}